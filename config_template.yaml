---
# Global options apply per default to every protocol / network / endpoint
global:
  # head_length is the number of blocks to be fetched from the head of the chain
  networks_options:
    head_length: 5
  # Gobal configuration for all endpoints, if not defined in endpoint, global will be used
  options:
    # Retry define how many time worker will try to call instance if he fail
    retry: 3
    # Delay between every retry
    delay: 1
    # Rate between every scrapping task
    rate: 4
  server:
    # On wich port json rpc will be served
    port: 8080
  metrics:
    # With listenning port metrics will be served
    port: 8081
database:
  # How many block will be kept in database
  keep_history: 100
protocols:
  bitcoin:
    mainnet:
      network_options:
        head_length: 10
      rpc:
      - url: https://sample.bitcoin.mainnet.rpc
        options:
          retry: 10
          delay: 1
          rate: 1
      - url: https://sample2.bitcoin.mainnet.rpc
        options:
          retry: 10
          delay: 1
          rate: 10
      blockstream:
        url: https://sample.bitcoin.mainnet.blockstream.api
      blockcypher:
        url: https://api.blockcypher.com
        options:
          rate: 360
  #       options:
  #         retry: 10
  #         delay: 1
  #         rate: 1000 
  # ethereum:
  #   mainnet:
  #     rpc:
  #     - url: https://sample.eth.mainnet.rpc
  #     infura:
  #       url: https://sample.eth.mainnet.infura
  #   sepolia:
  #     rpc:
  #     - url: https://sample.eth.sepolia.rpc
  #     infura:
  #       url: https://sample.eth.sepolia.infura
  # tezos:
  #   mainnet:
  #     rpc:
  #     - url: https://sample.tezos.mainnet.rpc
  #     tzkt:
  #       url: https://sample.tezos.mainnet.tzkt.api
  #     tzstats:
  #       url: https://sample.tezos.mainnet.tzstats.api
  #   ghostnet:
  #     rpc:
  #     - url: https://sample.tezos.ghostnet.rpc.api
  #     tzkt:
  #       url: https://sample.tezos.ghostnet.tzkt.api
  #     tzstats:
  #       url: https://sample.tezos.ghostnet.tzstats.api

